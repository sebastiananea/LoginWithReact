{"version":3,"sources":["Components/Login/post.jsx","Components/Login/Login.jsx","App.js","index.js"],"names":["myStorage","window","localStorage","postLogin","values","axios","post","then","response","console","log","data","setItem","token","catch","error","Login","SignupSchema","Yup","shape","email","required","password","className","initialValues","validationSchema","onSubmit","a","resetForm","Promise","r","setTimeout","toast","position","POSITION","BOTTOM_CENTER","errors","touched","name","type","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAEMA,EAAYC,OAAOC,aAGZC,EAAY,SAACC,GAWxB,OAVAC,IACGC,KAJW,qCAIGF,GACdG,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAASG,MACrBX,EAAUY,QAAQ,QAASJ,EAASG,KAAKE,UAE1CC,OAAM,SAACC,GAEN,OADAN,QAAQC,IAAI,UACL,MAEJ,G,OCyDMM,MAlEf,WACE,IAKMC,EAAeC,MAAaC,MAAM,CACtCC,MAAOF,MACJE,MAAM,mBACNC,SAAS,yCACZC,SAAUJ,MAAaG,SAAS,qCAElC,OACE,qBAAKE,UAAU,gBAAf,SACE,qBAAKA,UAAU,mCAAf,SACE,sBAAKA,UAAU,QAAf,UACE,oBAAIA,UAAU,cAAd,wBACA,cAAC,IAAD,CACEC,cAAe,CACbJ,MAAO,GACPE,SAAU,IAEZG,iBAAkBR,EAClBS,SAAQ,uCAAE,WAAOtB,EAAP,kBAAAuB,EAAA,6DAAiBC,EAAjB,EAAiBA,UAAjB,SACF,IAAIC,SAAQ,SAACC,GAAD,OAAOC,WAAWD,EAAG,QAD/B,OAGH3B,EAAUC,KACbwB,EAAU,CAAExB,OAAQ,KAzBhC4B,IAAMjB,MAAM,0CAA2C,CACrDkB,SAAUD,IAAME,SAASC,iBAoBT,2CAAF,wDANV,SAeG,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACC,eAAC,IAAD,CAAMd,UAAU,eAAhB,UACE,sBAAKA,UAAU,mCAAf,UACE,cAAC,IAAD,CAAOe,KAAK,QAAQC,KAAK,QAAQC,YAAY,UAC5CJ,EAAOhB,OAASiB,EAAQjB,MACvB,qBAAKG,UAAU,cAAf,SAA8Ba,EAAOhB,QACnC,QAEN,sBAAKG,UAAU,mCAAf,UACE,cAAC,IAAD,CACEe,KAAK,WACLC,KAAK,WACLC,YAAY,aAEbJ,EAAOd,UAAYe,EAAQf,SAC1B,qBAAKC,UAAU,cAAf,SAA8Ba,EAAOd,WACnC,QAEN,wBACEiB,KAAK,SACLhB,UAAU,iCAFZ,oBAMA,cAAC,IAAD,kBCzDDkB,MAJf,WACE,OAAO,cAAC,EAAD,K,cCGTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9fdee9ad.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst myStorage = window.localStorage\r\nconst baseURL = 'http://challenge-react.alkemy.org/'\r\n\r\nexport const postLogin = (values) => {\r\n  axios\r\n    .post(baseURL, values)\r\n    .then((response) => {\r\n      console.log(response.data)\r\n      myStorage.setItem('Token', response.data.token)\r\n    })\r\n    .catch((error) => {\r\n      console.log('error')\r\n      return false\r\n    })\r\n  return true\r\n}\r\n","import React from 'react'\r\nimport { Formik, Field, Form } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { postLogin } from './post'\r\n\r\nfunction Login() {\r\n  const notify = () =>\r\n    toast.error('Los datos no son validos para ingresar!', {\r\n      position: toast.POSITION.BOTTOM_CENTER,\r\n    })\r\n\r\n  const SignupSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .email('Correo invalido')\r\n      .required('Debes ingresar tu dirección correo'),\r\n    password: Yup.string().required('Debes ingresar la contraseña'),\r\n  })\r\n  return (\r\n    <div className='container p-5'>\r\n      <div className='pt-5 row justify-content-center '>\r\n        <div className='col-6'>\r\n          <h3 className='text-center'>Bienvenido</h3>\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              password: '',\r\n            }}\r\n            validationSchema={SignupSchema}\r\n            onSubmit={async (values, { resetForm }) => {\r\n              await new Promise((r) => setTimeout(r, 500))\r\n\r\n              if (!postLogin(values)) {\r\n                resetForm({ values: '' })\r\n                notify()\r\n              }\r\n            }}\r\n          >\r\n            {({ errors, touched }) => (\r\n              <Form className='cont rounded'>\r\n                <div className=' row form-group mb-3 text-center'>\r\n                  <Field name='email' type='email' placeholder='Email' />\r\n                  {errors.email && touched.email ? (\r\n                    <div className='text-danger'>{errors.email}</div>\r\n                  ) : null}\r\n                </div>\r\n                <div className='row form-group mb-3  text-center'>\r\n                  <Field\r\n                    name='password'\r\n                    type='password'\r\n                    placeholder='Password'\r\n                  />\r\n                  {errors.password && touched.password ? (\r\n                    <div className='text-danger'>{errors.password}</div>\r\n                  ) : null}\r\n                </div>\r\n                <button\r\n                  type='submit'\r\n                  className='btn btn-primary col-12 rounded'\r\n                >\r\n                  Enviar\r\n                </button>\r\n                <ToastContainer />\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import Login from './Components/Login/Login'\n\nfunction App() {\n  return <Login />\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}